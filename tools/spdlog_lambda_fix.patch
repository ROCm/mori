diff --git a/include/spdlog/details/os-inl.h b/include/spdlog/details/os-inl.h
index edbbd5c2..a190968b 100644
--- a/include/spdlog/details/os-inl.h
+++ b/include/spdlog/details/os-inl.h
@@ -403,7 +403,7 @@ SPDLOG_INLINE bool is_color_terminal() SPDLOG_NOEXCEPT {
     return true;
 #else
 
-    static const bool result = []() {
+    static const bool result = []() -> bool {
         const char *env_colorterm_p = std::getenv("COLORTERM");
         if (env_colorterm_p != nullptr) {
             return true;
diff --git a/include/spdlog/fmt/bundled/format.h b/include/spdlog/fmt/bundled/format.h
index 50e57144..ad66507b 100644
--- a/include/spdlog/fmt/bundled/format.h
+++ b/include/spdlog/fmt/bundled/format.h
@@ -2343,7 +2343,7 @@ FMT_CONSTEXPR20 auto do_write_float(OutputIt out, const DecimalFP& f,
                                          : static_cast<Char>('.');
 
   int output_exp = f.exponent + significand_size - 1;
-  auto use_exp_format = [=]() {
+  auto use_exp_format = [=]() -> bool {
     if (specs.type() == presentation_type::exp) return true;
     if (specs.type() == presentation_type::fixed) return false;
     // Use the fixed notation if the exponent is in [exp_lower, exp_upper),
